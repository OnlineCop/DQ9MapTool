//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DQ9MapTool.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DQ9MapTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM SavedMaps
        ///WHERE
        ///	MapSeed = @MapSeed
        ///	AND MapRank = @MapRank.
        /// </summary>
        internal static string DeleteMapSQL {
            get {
                return ResourceManager.GetString("DeleteMapSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO SavedMaps (
        ///	MapSeed,
        ///	MapRank
        ///) 
        ///VALUES (
        ///	@MapSeed,
        ///	@MapRank
        ///).
        /// </summary>
        internal static string SaveMapSQL {
            get {
                return ResourceManager.GetString("SaveMapSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	Maps.MapSeed,
        ///	Maps.MapRank,
        ///	Locations.Location
        ///FROM
        ///	Maps
        ///	INNER JOIN Locations ON
        ///		Maps.MapSeed = Locations.MapSeed
        ///		AND Maps.MapRank = Locations.MapRank
        ///WHERE
        ///	Maps.MaterialTypeId       = @MaterialTypeId
        ///	AND Maps.DungeonTypeId    = @DungeonTypeId
        ///	AND Maps.DifficultyTypeId = @DifficultyTypeId
        ///	AND Maps.Level            = @Level.
        /// </summary>
        internal static string SearchForMapSQL {
            get {
                return ResourceManager.GetString("SearchForMapSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	Maps.MapSeed,
        ///	Maps.MapRank,
        ///	MaterialTypes.MaterialType + &apos; &apos; + 
        ///		DungeonTypes.DungeonType + &apos; of &apos; +
        ///		DifficultyTypes.DifficultyType + &apos; lvl &apos; +
        ///		CAST(Maps.Level AS nchar(3)) AS MapName
        ///FROM
        ///	SavedMaps
        ///	INNER JOIN Maps ON SavedMaps.MapSeed = Maps.MapSeed AND SavedMaps.MapRank = Maps.MapRank
        ///	INNER JOIN MaterialTypes ON Maps.MaterialTypeId = MaterialTypes.MaterialTypeId
        ///	INNER JOIN DungeonTypes ON Maps.DungeonTypeId = DungeonTypes.DungeonTypeId
        ///	INNER JOIN DifficultyTypes ON Maps.Dif [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ViewSavedMapsSQL {
            get {
                return ResourceManager.GetString("ViewSavedMapsSQL", resourceCulture);
            }
        }
        
        internal static byte[] zsetr {
            get {
                object obj = ResourceManager.GetObject("zsetr", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
